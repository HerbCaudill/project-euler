import { Series } from 'lib/Series'
import { range } from 'lib/range'

// Pentagon numbers
// ================
// Pentagonal numbers are generated by the formula, P[n]=n(3n-1)/2. The first
// ten pentagonal numbers are:
//
//                1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//
// It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their
// difference, 70 - 22 = 48, is not pentagonal.
//
// Find the pair of pentagonal numbers, P[j] and P[k], for which their sum
// and difference is pentagonal and D = |P[k] - P[j]| is minimised; what is
// the value of D?

const P = new Series((n: number) => (n * (3 * n - 1)) / 2)

const example = [1, 5, 12, 22, 35, 51, 70, 92, 117, 145]
expect(P.valuesUpTo(145)).toEqual(expect.arrayContaining(example))

expect(P.includes(P.value(4) + P.value(7))).toBe(true)
expect(P.includes(P.value(7) - P.value(4))).toBe(false)

const pSums = (max: number) => {
  const values = P.valuesUpTo(max)
  const results: { pj: number; pk: number }[] = []
  for (const pk of values) {
    const valuesBelow = P.valuesUpTo(pk - 1)
    for (const pj of valuesBelow) {
    }
  }
}

export const solution044 = () => {
  return -1
}
